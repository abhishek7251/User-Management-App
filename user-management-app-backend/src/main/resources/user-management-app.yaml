openapi: 3.0.0
info:
  title: Users API
  description: API for managing users
  version: 1.0.0
servers:
  - url: http://localhost:8081
paths:
  /api/users/load:
    get:
      summary: Load users
      operationId: loadUsers
      responses:
        "200":
          description: Users loaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  total:
                    type: integer
                  skip:
                    type: integer
                  limit:
                    type: integer
  /api/users/search:
    get:
      summary: Search users
      operationId: searchUsers
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Users found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/users/get-all-users:
    get:
      summary: Get all users
      operationId: getAllUsers
      responses:
        "200":
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /api/users/get-by-id:
    get:
      summary: Get user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /api/users/get-by-email:
    get:
      summary: Get user by Email
      operationId: getUserByEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        maidenName:
          type: string
        age:
          type: integer
        gender:
          type: string
        email:
          type: string
        phone:
          type: string
        username:
          type: string
        birthDate:
          type: string
          format: date
        image:
          type: string
        bloodGroup:
          type: string
        height:
          type: number
        weight:
          type: number
        eyeColor:
          type: string
        hair:
          type: object
          properties:
            color:
              type: string
            type:
              type: string
        ip:
          type: string
        address:
          type: object
          properties:
            address:
              type: string
            city:
              type: string
            state:
              type: string
            stateCode:
              type: string
            postalCode:
              type: string
            coordinates:
              type: object
              properties:
                lat:
                  type: number
                lng:
                  type: number
            country:
              type: string
        macAddress:
          type: string
        university:
          type: string
        bank:
          type: object
          properties:
            cardExpire:
              type: string
            cardNumber:
              type: string
            cardType:
              type: string
            currency:
              type: string
            iban:
              type: string
        company:
          type: object
          properties:
            department:
              type: string
            name:
              type: string
            title:
              type: string
            address:
              type: object
              properties:
                address:
                  type: string
                city:
                  type: string
                state:
                  type: string
                stateCode:
                  type: string
                postalCode:
                  type: string
                coordinates:
                  type: object
                  properties:
                    lat:
                      type: number
                    lng:
                      type: number
                country:
                  type: string
        ein:
          type: string
        ssn:
          type: string
        userAgent:
          type: string
        crypto:
          type: object
          properties:
            coin:
              type: string
            wallet:
              type: string
            network:
              type: string
        role:
          type: string
